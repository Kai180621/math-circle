{"version":3,"sources":["logo.svg","serviceWorker.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Dot","props","color","className","join","onClick","mark","Circle","styles","width","rl","height","top","ry","left","rx","borderRadius","style","Points","abc","xy","CircleData","Board","tbl","Array","i","fill","state","table","this","slice","ax","ay","bx","by","cx","cy","abx","aby","cbx","cby","Math","sqrt","console","log","setState","j","k","calculate","handleClick","dots","row_dot","push","renderDots","React","Component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7ce527db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nfunction Dot(props){\n\tconst color = props.color;\n\treturn (\n\t\t<button className={[\"dot\", color].join(\" \")} onClick={props.onClick}>\n\t\t\t<span className=\"dot-mark\">\n\t\t\t\t{props.mark}\n\t\t\t</span>\n\t\t</button>\n\t);\n}\n\nfunction Circle(props) {\n\tlet styles = {\n\t\twidth: 60 * props.rl,\n\t\theight: 60 * props.rl,\n\t\ttop: (10 - props.ry - props.rl) * 30 + 15,\n\t\tleft: (props.rx - props.rl + 10) * 30 + 15,\n\t\tborderRadius: props.rl * 60\n\t}\n\treturn (\n\t\t<div className=\"circle\" style={styles}></div>\n\t);\n}\n\nfunction Points(props) {\n\treturn (\n\t\t<p>\n\t\t\t{props.abc}: ({props.xy[0]}, {props.xy[1]})\n\t\t</p>\n\t);\n}\n\nfunction CircleData(props) {\n\treturn (\n\t\t<p>\n\t\t\t中心: ({props.rx},{props.ry}) 半径: {props.rl}\n\t\t</p>\n\t)\n}\n\nclass Board extends React.Component {\n\tconstructor(props) {\n\t\tvar tbl = new Array(21);\n\t\tfor (let i = 0; i < 21; i++) {\n\t\t\ttbl[i] = new Array(21).fill('・');\n\t\t}\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\ttable: tbl,\n\t\t\txy: [[null, null], [null, null], [null, null]],\n\t\t\trx: null,\n\t\t\try: null,\n\t\t\trl: null\n\t\t}\n\t}\n\tcalculate() {\n\t\tconst xy = this.state.xy.slice();\n\t\tconst ax = xy[0][0];\n\t\tconst ay = xy[0][1];\n\t\tconst bx = xy[1][0];\n\t\tconst by = xy[1][1];\n\t\tconst cx = xy[2][0];\n\t\tconst cy = xy[2][1];\n\t\tconst abx = ax - bx;\n\t\tconst aby = ay - by;\n\t\tconst cbx = cx - bx;\n\t\tconst cby = cy - by;\n\t\tconst rx = (cby * (abx * (ax + bx) + aby * (ay + by)) - aby * (cbx * (cx + bx) + cby * (cy + by))) / (2 * abx * cby - 2 * aby * cbx);\n\t\tconst ry = (-cbx * (abx * (ax + bx) + aby * (ay + by)) + abx * (cbx * (cx + bx) + cby * (cy + by))) / (2 * abx * cby - 2 * aby * cbx);\n\t\tconst rl = Math.sqrt(((ax - rx) ** 2 + (ay - ry) ** 2));\n\t\tconsole.log(rx, ry, rl)\n\t\tthis.setState({ rx: rx })\n\t\tthis.setState({ ry: ry })\n\t\tthis.setState({ rl: rl })\n\t}\n\thandleClick(i, j) {\n\t\tif (this.state.xy[2][0] != null) {\n\t\t\tthis.calculate()\n\t\t\treturn;\n\t\t} else {\n\t\t\tconst table = this.state.table.slice();\n\t\t\ttable[i][j] = '◉';\n\t\t\tthis.setState({ table: table });\n\t\t\tconst xy = this.state.xy.slice();\n\t\t\tfor (let k = 0; k < 3; k++) {\n\t\t\t\tif (xy[k][0] === null) {\n\t\t\t\t\txy[k] = [j - 10, 10 - i];\n\t\t\t\t\tbreak\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.setState({ xy: xy })\n\t\t}\n\t}\n\trenderDots(i, j, color) {\n\t\treturn (\n\t\t\t<Dot mark={this.state.table[i][j]} color={color} onClick={() => this.handleClick(i, j)} />\n\t\t);\n\t}\n\trender() {\n    const dots = [];\n\t\tfor (let i = 0; i < 21; i++) {\n\t\t\tlet row_dot = [];\n\t\t\tfor (let j = 0; j < 21; j++) {\n\t\t\t\tif (i === 10 || j === 10) {\n\t\t\t\t\trow_dot.push(\n\t\t\t\t\t\tthis.renderDots(i, j, 'dark')\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\trow_dot.push(\n\t\t\t\t\t\tthis.renderDots(i, j, 'gray')\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdots.push(\n\t\t\t\t<div>\n\t\t\t\t\t{row_dot}\n\t\t\t\t</div>\n\t\t\t);\n    }\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<h1>3点を選んで円を作ろう</h1>\n\t\t\t\t\t<p>点を３つ選んで、最後にどこかをクリック！</p>\n\t\t\t\t\t<div className=\"calculate\">\n\t\t\t\t\t\t<div className=\"data\">\n\t\t\t\t\t\t\t<Points abc={'A'} xy={this.state.xy[0]}/>\n\t\t\t\t\t\t\t<Points abc={'B'} xy={this.state.xy[1]} />\n\t\t\t\t\t\t\t<Points abc={'C'} xy={this.state.xy[2]} />\n\t\t\t\t\t\t\t<CircleData rx={this.state.rx} ry={this.state.ry} rl={this.state.rl} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"board-size\">21 x 21</div>\n\t\t\t\t\t<div className=\"board\">\n\t\t\t\t\t\t{dots}\n\t\t\t\t\t\t<Circle rx={this.state.rx} ry={this.state.ry} rl={this.state.rl} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t\n\t\t\t</div>\n    );\n  }\t\t\t\n}\n\nReactDOM.render(\n  <Board />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}